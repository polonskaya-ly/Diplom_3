{"name": "Увеличение каунтера ингредиента при добавлении в заказ ингредиента", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <Diplom_3.tests.test_main_functions.TestMainFunctions object at 0x104bb60e0>\n\n    @allure.title('Увеличение каунтера ингредиента при добавлении в заказ ингредиента')\n    def test_ingredient_counter_by_adding_ingredient_to_cart(self):\n        main_page = MainPage(self.driver)\n        main_page.drug_and_drop_ingredient_to_cart()\n>       main_page.check_ingredient_counter_number()\n\ntests/test_main_functions.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/main_page.py:107: in check_ingredient_counter_number\n    self.wait_for_change_basket_image()\npages/main_page.py:63: in wait_for_change_basket_image\n    WebDriverWait(self.driver, 5).until(expected_conditions.invisibility_of_element_located((MainPageLocators.\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7624b08e-8734-4b9b-b4c4-286a636d0d14\")>\nmethod = <function invisibility_of_element_located.<locals>._predicate at 0x104c8c9d0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "steps": [{"name": "Проверить значение счетчика ингредиента", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"/Users/polonskaya-ly/PycharmProjects/Diplom_3/venv/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/polonskaya-ly/PycharmProjects/Diplom_3/pages/main_page.py\", line 107, in check_ingredient_counter_number\n    self.wait_for_change_basket_image()\n  File \"/Users/polonskaya-ly/PycharmProjects/Diplom_3/pages/main_page.py\", line 63, in wait_for_change_basket_image\n    WebDriverWait(self.driver, 5).until(expected_conditions.invisibility_of_element_located((MainPageLocators.\n  File \"/Users/polonskaya-ly/PycharmProjects/Diplom_3/venv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1723802351506, "stop": 1723802356663}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1723802350943, "stop": 1723802356665, "uuid": "13a627d6-7992-4ab5-9534-bb48c1018413", "historyId": "a2c3110e8def358d957be84611ed7757", "testCaseId": "a9efb698517f3d47ea8d48ae0d502644", "fullName": "tests.test_main_functions.TestMainFunctions#test_ingredient_counter_by_adding_ingredient_to_cart", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('driver')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_main_functions"}, {"name": "subSuite", "value": "TestMainFunctions"}, {"name": "host", "value": "i112733200"}, {"name": "thread", "value": "32744-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_main_functions"}]}